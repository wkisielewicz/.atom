{
  "_args": [
    [
      {
        "raw": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
        "spec": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
        "type": "local"
      },
      "/tmp/apm-install-dir-116921-9397-fqz9rv"
    ]
  ],
  "_from": "../d-116921-9397-1qvp3g0/package.tgz",
  "_id": "jupyter-notebook@0.0.9",
  "_inCache": true,
  "_installable": true,
  "_location": "/jupyter-notebook",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
    "spec": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-116921-9397-1qvp3g0/package.tgz",
  "_shasum": "30b0a1d130d5e835b3e8902cf06be97171477786",
  "_shrinkwrap": null,
  "_spec": "/tmp/d-116921-9397-1qvp3g0/package.tgz",
  "_where": "/tmp/apm-install-dir-116921-9397-fqz9rv",
  "bugs": {
    "url": "https://github.com/jupyter/atom-notebook/issues"
  },
  "dependencies": {
    "atom-space-pen-views": "^2.0",
    "event-kit": "^1.2",
    "flux": "^2",
    "fs-plus": "^2.8",
    "immutable": "^3",
    "jupyter-js-services": ">=0.4.0",
    "pathwatcher": ">=4.4.3",
    "portfinder": "^0.4.0",
    "react": "^0.14",
    "react-dom": "^0.14.3",
    "transformime": "^1",
    "transformime-jupyter-transformers": "0.0.4",
    "uuid": "^2",
    "ws": "^0.8",
    "xmlhttprequest": "^1.8"
  },
  "description": "Jupyter Notebook, but inside Atom.",
  "devDependencies": {
    "babel-eslint": ">=4.1.5",
    "eslint": ">=1.10.1",
    "eslint-plugin-react": ">=3.10.0"
  },
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "homepage": "https://github.com/jupyter/atom-notebook#readme",
  "keywords": [
    "jupyter",
    "ipython",
    "notebook",
    "repl"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "jupyter-notebook",
  "optionalDependencies": {},
  "readme": "# jupyter-notebook\n\nA package that works like the [Jupyter Notebook](http://jupyter.org/), but inside Atom. It's registered as an opener for `.ipynb` files â€” try opening one!\n\n![Sweet baby integration](http://i.imgur.com/100MtXR.png)\n\n## Install\n\n1. Install dependencies:\n\n ##### OS X\n\n  * Python 3: `brew install python3` (there are [issues](http://apple.stackexchange.com/questions/209572/how-to-use-pip-after-the-el-capitan-max-os-x-upgrade) with pip2 and OS X 10.11)\n  * Jupyter and Jupyter Kernel Gateway: `pip3 install jupyter jupyter_kernel_gateway`\n\n ##### Linux (Debian)\n\n  * Python: `sudo apt-get install python python-pip`\n  * Jupyter and Jupyter Kernel Gateway: `pip install jupyter jupyter_kernel_gateway`\n\n2. `apm install jupyter-notebook` or search for *jupyter-notebook* inside of Atom\n\n## Usage\n\n* Run cell: SHIFT+ENTER, CMD+ENTER (or CTRL+ENTER on Windows)\n\n## Developers\n\n### Install\n\n1. `git clone https://github.com/jupyter/atom-notebook.git`\n2. `apm install`\n3. `apm link`\n\n### Achitecture\n\nThis package is built on React and the Flux architecture.\n\n#### Map\n\n- **main** tells Atom how to render `NotebookEditor` and registers as an Opener for `.ipynb` files\n- **dispatcher** is a singleton flux.Dispatcher which contains the list of valid actions\n- **notebook-editor** is the Store and handles all of the business logic. It loads the file in, creates a state, then receives Actions and updates the state accordingly.\n- **notebook-editor-view**, notebook-cell, text-editor, display-area are the views. notebook-editor-view updates its state by fetching it from notebook-editor, then passes appropriate bits of that state down to the other views as props.\n\n#### Flow\n\n**Rendering:** `NotebookEditor -> NotebookEditorView -> [child views]`\n\n**Updating:** `[external action] -> Dispatcher.dispatch -> NotebookEditor.onAction ?-> NotebookEditor._onChange -> NotebookEditorView._onChange`\n\n#### Immutable state\n\nThe state returned by `NotebookEditor.getState` is an [`Immutable.js`](https://facebook.github.io/immutable-js/) object.\n\nAccessing its properties inside a view looks like this:\n\n```javascript\nlet executionCount = this.props.data.get('execution_count');\n```\n\nChanging it (in NotebookEditor) looks like this:\n\n```javascript\nthis.state = this.state.setIn(\n    ['cells', cellIndex, 'source'],\n    payload.source);\n```\n\nor this:\n\n```javascript\noutputs = outputs.push(el.outerHTML);\n```\n\nSince React requires a view's state to be a regular JS object, the state of NotebookEditorView takes the form:\n\n```javascript\n{\n    data: <Immutable object>\n}\n```\n\nNo other views have state.\n\n### To do\n\n- autocomplete\n  - `atom.workspace.getActiveTextEditor()` returns `undefined` because `atom.workspace.getActivePaneItem()` returns our custom NotebookEditor class which contains one or more TextEditors, therefore autocomplete, find, and features provided by other packages don't work in cells\n- add more actions (duplicate cell, restart kernel, change cell type, etc)\n- tell React [our rendering is pure](https://facebook.github.io/react/docs/advanced-performance.html)\n- test rendering performance with big notebooks\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jupyter/atom-notebook.git"
  },
  "version": "0.0.9"
}
