"use strict";

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var Convert = require('ansi-to-html');

var ConsoleTextTransformer = (function () {
    function ConsoleTextTransformer() {
        _classCallCheck(this, ConsoleTextTransformer);
    }

    _createClass(ConsoleTextTransformer, [{
        key: 'transform',
        value: function transform(text, doc) {
            // Note: data.ename and data.evalue are available too
            var el = doc.createElement('pre');

            var convert = new Convert({
                escapeXML: true,
                newLine: true
            });
            el.innerHTML = convert.toHtml(text);
            return el;
        }
    }, {
        key: 'mimetype',
        get: function get() {
            return 'jupyter/console-text';
        }
    }]);

    return ConsoleTextTransformer;
})();

exports.ConsoleTextTransformer = ConsoleTextTransformer;
//# sourceMappingURL=console-text.transformer.js.map