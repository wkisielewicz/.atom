{"version":3,"sources":["../src/transformer-base.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;IAOA,eAAe;WAAf,eAAe;0BAAf,eAAe;;;eAAf,eAAe;;;;;;;;;WAef,mBAAC,IAAI,EAAE,QAAQ,EAAE;AACtB,YAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAChD;;;;;;;;SAZW,eAAG;AACX,YAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC/C;;;SAPQ,eAAe;;;QAAf,eAAe,GAAf,eAAe","file":"transformer-base.js","sourcesContent":["\"use strict\";\n\n/**\n * Base class for Transformers. As long as a transformer adheres to this\n * interface, transformime will play happily (you don't have to extend from this\n * class)\n */\nexport class TransformerBase {\n    /**\n     * The mimetype for this transformer\n     * @return {string} mimetype (e.g. 'text/html', 'image/png', etc.)\n     */\n    get mimetype() {\n        throw new Error('mimetype not implemented');\n    }\n\n    /**\n     * Turns a data type into an HTML Element on a document\n     * @param  {any} data           Data this transformer expects\n     * @param  {Document} document  A DOM (window.document, JSDom, iframe.contentDocument)\n     * @return {HTMLElement}        Representation of [data] as an HTMLElement\n     */\n    transform(data, document) {\n        throw new Error('transform not implemented');\n    }\n}\n"]}