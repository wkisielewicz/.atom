{"version":3,"sources":["../src/image.transformer.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;+BAEiB,oBAAoB;;;;;;IAKrC,gBAAgB;cAAhB,gBAAgB;;AACd,aADF,gBAAgB,CACb,QAAQ,EAAE;8BADb,gBAAgB;;AAErB,mCAFK,gBAAgB,6CAEb;AACR,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC7B;;iBAJQ,gBAAgB;;eAchB,mBAAC,IAAI,EAAE,GAAG,EAAE;AACjB,gBAAI,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACnC,eAAG,CAAC,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAE,IAAI,CAAC;AACrD,mBAAO,GAAG,CAAC;SACd;;;aAZW,eAAG;AACX,mBAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAEW,aAAC,QAAQ,EAAE;AACpB,gBAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC5B;;;WAZQ,gBAAgB;oBALrB,eAAe;;QAKV,gBAAgB,GAAhB,gBAAgB","file":"image.transformer.js","sourcesContent":["\"use strict\";\n\nimport {TransformerBase} from './transformer-base';\n\n/**\n * Converts b64 image mimetypes to img elements.\n */\nexport class ImageTransformer extends TransformerBase {\n    constructor(mimetype) {\n        super();\n        this._mimetype = mimetype;\n    }\n\n    get mimetype() {\n        return this._mimetype;\n    }\n\n    set mimetype(mimetype) {\n       this._mimetype = mimetype;\n    }\n\n    transform(data, doc) {\n        let img = doc.createElement('img');\n        img.src = 'data:' + this.mimetype + ';base64,'+ data;\n        return img;\n    }\n}\n"]}