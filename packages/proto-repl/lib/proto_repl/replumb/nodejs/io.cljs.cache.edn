;; Analyzed by ClojureScript 1.7.228
{:name replumb.nodejs.io, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, common replumb.common, replumb.common replumb.common}, :imports nil, :defs {require-fs {:name replumb.nodejs.io/require-fs, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 11, :column 1, :end-line 11, :end-column 16, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 11, :column 6, :end-line 11, :end-column 16}, :doc "Delay containing the call to \"require fs\". It returns the File\n  System Node.js module object."}, read-file! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb])), :doc "Accepts the fs module object, encoding or file options, file name to\n  read and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :arglists ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :arglists-meta (nil nil nil)}}, :name replumb.nodejs.io/read-file!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :arglists ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :arglists-meta (nil nil nil)}, :method-params ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 4, :fn-var true, :arglists ([file-path src-cb] [encoding-or-opts file-path src-cb] [fs-module encoding-or-opts file-path src-cb]), :doc "Accepts the fs module object, encoding or file options, file name to\n  read and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback."}, write-file! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data])), :doc "Accepts the fs module object, encoding or file options, file name to\n  write and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  It is synchronous and returns undefined as per Node.js doc.\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :arglists ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :arglists-meta (nil nil nil)}}, :name replumb.nodejs.io/write-file!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :arglists ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :arglists-meta (nil nil nil)}, :method-params ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 4, :fn-var true, :arglists ([file-path data] [encoding-or-opts file-path data] [fs-module encoding-or-opts file-path data]), :doc "Accepts the fs module object, encoding or file options, file name to\n  write and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  It is synchronous and returns undefined as per Node.js doc.\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback."}, delete-file! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 61, :column 7, :end-line 61, :end-column 19, :arglists (quote ([file-path] [fs-module file-path])), :doc "Accepts the fs module object, encoding or file options, file name to\n  write and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  It is synchronous and returns undefined as per Node.js doc.\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([file-path] [fs-module file-path]), :arglists ([file-path] [fs-module file-path]), :arglists-meta (nil nil)}}, :name replumb.nodejs.io/delete-file!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([file-path] [fs-module file-path]), :arglists ([file-path] [fs-module file-path]), :arglists-meta (nil nil)}, :method-params ([file-path] [fs-module file-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists ([file-path] [fs-module file-path]), :doc "Accepts the fs module object, encoding or file options, file name to\n  write and a callback. Upon success, invokes the callback with the\n  source of the file. Otherwise invokes the callback with nil.\n\n  The arity without explicit module will call require the first time\n  only. The arity without encoding-or-opts will default to no file\n  options and encoding \"UTF-8\".\n\n  It is synchronous and returns undefined as per Node.js doc.\n\n  For encoding-or-opts, see\n  https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback."}, file-exists? {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([path] [fs-module path])), :doc "Check if the file on the given path exists. It is synchronous.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([path] [fs-module path]), :arglists ([path] [fs-module path]), :arglists-meta (nil nil)}}, :name replumb.nodejs.io/file-exists?, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([path] [fs-module path]), :arglists ([path] [fs-module path]), :arglists-meta (nil nil)}, :method-params ([path] [fs-module path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists ([path] [fs-module path]), :doc "Check if the file on the given path exists. It is synchronous."}, safely-delete! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 95, :column 7, :end-line 95, :end-column 21, :arglists (quote ([path])), :doc "Before deleting, checks if the file exists."}, :name replumb.nodejs.io/safely-delete!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 21, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :doc "Before deleting, checks if the file exists."}, rename-file! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 101, :column 7, :end-line 101, :end-column 19, :arglists (quote ([old-path new-path] [fs-module old-path new-path])), :doc "Renames synchronously a file.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([old-path new-path] [fs-module old-path new-path]), :arglists ([old-path new-path] [fs-module old-path new-path]), :arglists-meta (nil nil)}}, :name replumb.nodejs.io/rename-file!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([old-path new-path] [fs-module old-path new-path]), :arglists ([old-path new-path] [fs-module old-path new-path]), :arglists-meta (nil nil)}, :method-params ([old-path new-path] [fs-module old-path new-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 3, :fn-var true, :arglists ([old-path new-path] [fs-module old-path new-path]), :doc "Renames synchronously a file."}, safely-rename-file! {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :line 108, :column 7, :end-line 108, :end-column 26, :arglists (quote ([old-path new-path])), :doc "Before renaming, checks if the file exists."}, :name replumb.nodejs.io/safely-rename-file!, :variadic false, :file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/replumb/nodejs/io.cljs", :end-column 26, :method-params ([old-path new-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([old-path new-path])), :doc "Before renaming, checks if the file exists."}}}