;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name proto-repl.self-hosted, :imports nil, :requires {replumb replumb.core, node-io replumb.nodejs.io, prc prc, r cljs.reader, replumb.core replumb.core, cljs.nodejs cljs.nodejs, nodejs cljs.nodejs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, replumb.nodejs.io replumb.nodejs.io}, :uses nil, :defs {path-module {:name proto-repl.self-hosted/path-module, :file "src-cljs/proto_repl/self_hosted.cljs", :line 17, :column 1, :end-line 17, :end-column 17, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/proto_repl/self_hosted.cljs", :line 17, :column 6, :end-line 17, :end-column 17}}, atom-project-path {:name proto-repl.self-hosted/atom-project-path, :file "src-cljs/proto_repl/self_hosted.cljs", :line 20, :column 1, :end-line 20, :end-column 23, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/proto_repl/self_hosted.cljs", :line 20, :column 6, :end-line 20, :end-column 23}}, eval-str {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/proto_repl/self_hosted.cljs", :line 27, :column 7, :end-line 27, :end-column 15, :arglists (quote ([code callback])), :doc "Evaluates the clojure code using replumb and invokes the callback."}, :name proto-repl.self-hosted/eval-str, :variadic false, :file "src-cljs/proto_repl/self_hosted.cljs", :end-column 15, :method-params ([code callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code callback])), :doc "Evaluates the clojure code using replumb and invokes the callback."}, eval-for-js {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/proto_repl/self_hosted.cljs", :line 37, :column 16, :end-line 37, :end-column 27, :export true, :arglists (quote ([code callback])), :doc "Evaluates the clojure code for the javascript side. Converts the result to Javascript."}, :name proto-repl.self-hosted/eval-for-js, :variadic false, :file "src-cljs/proto_repl/self_hosted.cljs", :end-column 27, :method-params ([code callback]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code callback])), :doc "Evaluates the clojure code for the javascript side. Converts the result to Javascript."}, completions {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/src-cljs/proto_repl/self_hosted.cljs", :line 42, :column 16, :end-line 42, :end-column 27, :export true, :arglists (quote ([text callback-fn])), :doc "Provides completions for self hosted code."}, :name proto-repl.self-hosted/completions, :variadic false, :file "src-cljs/proto_repl/self_hosted.cljs", :end-column 27, :method-params ([text callback-fn]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text callback-fn])), :doc "Provides completions for self hosted code."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:candidate :value :docs :type :success?}, :order [:success? :candidate :docs :type :value]}, :doc "Provides functions for implementing a self hosted repl."}