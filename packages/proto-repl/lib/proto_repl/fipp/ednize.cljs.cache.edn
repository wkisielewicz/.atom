;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name fipp.ednize, :imports nil, :requires {s clojure.string, clojure.string clojure.string}, :uses nil, :defs {IEdn {:meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/fipp/ednize.cljs", :line 4, :column 14, :end-line 4, :end-column 18, :doc "Perform a shallow conversion to an Edn data structure.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-edn [[x]]}}}, :protocol-symbol true, :name fipp.ednize/IEdn, :file "../lib/proto_repl/fipp/ednize.cljs", :end-column 18, :column 1, :line 4, :protocol-info {:methods {-edn [[x]]}}, :info nil, :end-line 4, :impls #{cljs.core/ExceptionInfo cljs.core/UUID}, :doc "Perform a shallow conversion to an Edn data structure.", :jsdoc ("@interface")}, -edn {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/fipp/ednize.cljs", :line 6, :column 4, :end-line 6, :end-column 8, :protocol fipp.ednize/IEdn, :doc nil, :arglists (quote ([x]))}, :protocol fipp.ednize/IEdn, :name fipp.ednize/-edn, :variadic false, :file "../lib/proto_repl/fipp/ednize.cljs", :end-column 8, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc nil}, edn {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/fipp/ednize.cljs", :line 11, :column 7, :end-line 11, :end-column 10, :arglists (quote ([x]))}, :name fipp.ednize/edn, :variadic false, :file "../lib/proto_repl/fipp/ednize.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, record->tagged {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/fipp/ednize.cljs", :line 76, :column 7, :end-line 76, :end-column 21, :arglists (quote ([x]))}, :name fipp.ednize/record->tagged, :variadic false, :file "../lib/proto_repl/fipp/ednize.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{uuid :ready :cause object :else :pending js :val inst ExceptionInfo :status :message :data}, :order [js :pending :ready object :status :val inst :else uuid ExceptionInfo :message :data :cause]}, :doc nil}