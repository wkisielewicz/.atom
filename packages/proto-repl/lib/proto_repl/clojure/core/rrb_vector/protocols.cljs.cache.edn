;; Analyzed by ClojureScript 1.7.228
{:name clojure.core.rrb-vector.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {PSpliceableVector {:meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :line 3, :column 14, :end-line 3, :end-column 31, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-splicev [[v1 v2]]}}}, :protocol-symbol true, :name clojure.core.rrb-vector.protocols/PSpliceableVector, :file "../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :end-column 31, :column 1, :line 3, :protocol-info {:methods {-splicev [[v1 v2]]}}, :info nil, :end-line 3, :impls #{}, :doc nil, :jsdoc ("@interface")}, -splicev {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :line 4, :column 4, :end-line 4, :end-column 12, :protocol clojure.core.rrb-vector.protocols/PSpliceableVector, :doc nil, :arglists (quote ([v1 v2]))}, :protocol clojure.core.rrb-vector.protocols/PSpliceableVector, :name clojure.core.rrb-vector.protocols/-splicev, :variadic false, :file "../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :end-column 12, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2])), :doc nil}, PSliceableVector {:meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :line 6, :column 14, :end-line 6, :end-column 30, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-slicev [[v start end]]}}}, :protocol-symbol true, :name clojure.core.rrb-vector.protocols/PSliceableVector, :file "../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :end-column 30, :column 1, :line 6, :protocol-info {:methods {-slicev [[v start end]]}}, :info nil, :end-line 6, :impls #{}, :doc nil, :jsdoc ("@interface")}, -slicev {:protocol-inline nil, :meta {:file "/Users/jason/work/github_workspace/proto-repl/proto-repl-client-cljs/../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :line 7, :column 4, :end-line 7, :end-column 11, :protocol clojure.core.rrb-vector.protocols/PSliceableVector, :doc nil, :arglists (quote ([v start end]))}, :protocol clojure.core.rrb-vector.protocols/PSliceableVector, :name clojure.core.rrb-vector.protocols/-slicev, :variadic false, :file "../lib/proto_repl/clojure/core/rrb_vector/protocols.cljs", :end-column 11, :method-params ([v start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v start end])), :doc nil}}}